# include the partitioning logic from the pre section.
%include /tmp/part-include.cfg
%include /tmp/net-include.cfg
%include /tmp/rootpw-include.cfg

%pre
exec </dev/tty6> /dev/tty6
chvt 6
clear

echo "
         iiii WWWWWWWW                           WWWWWWWW                
        i::::iW::::::W                           W::::::W                
         iiii W::::::W                           W::::::W                
              W::::::W                           W::::::W                
       iiiiiii W:::::W           WWWWW           W:::::W eeeeeeeeeeee    
       i:::::i  W:::::W         W:::::W         W:::::Wee::::::::::::ee  
        i::::i   W:::::W       W:::::::W       W:::::We::::::eeeee:::::ee
        i::::i    W:::::W     W:::::::::W     W:::::We::::::e     e:::::e
        i::::i     W:::::W   W:::::W:::::W   W:::::W e:::::::eeeee::::::e
        i::::i      W:::::W W:::::W W:::::W W:::::W  e:::::::::::::::::e 
        i::::i       W:::::W:::::W   W:::::W:::::W   e::::::eeeeeeeeeee  
        i::::i        W:::::::::W     W:::::::::W    e:::::::e           
       i::::::i        W:::::::W       W:::::::W     e::::::::e          
       i::::::i         W:::::W         W:::::W       e::::::::eeeeeeee  
       i::::::i          W:::W           W:::W         ee:::::::::::::e  
       iiiiiiii           WWW             WWW            eeeeeeeeeeeeee  

Welcome to the iWe installer!

The installer will erase all data on this computer. If you are unsure about
deleting all the data, it is a good time to power off.

Please make sure this computer is connected to the wired network, and that
Internet connection is available.

Installation will start in 30 seconds...
"

sleep 3

### start

repodev=$(mount|grep "/run/install/repo"|cut -d ' ' -f 1)
umount $repodev

mkdir -p /tmp/iWe/{IWE,IWE_INST,install_keys}

mount -L IWE_INST /tmp/iWe/IWE_INST
ret_inst=$?

mount -L IWE /tmp/iWe/IWE
ret_ext=$?

MSG="ERROR: This installer requires a valid installation key available in a
partition with label IWE_INST or IWE. The installer could not find these
partitions.

Before starting the installer again plug a device containing a partition that
'mount -L IWE' can find.

Installation will not continue."
if [[ $ret_inst != 0 ]] && [[ $ret_ext != 0 ]];then
	echo $MSG
	read
	shutdown -r now
fi

install_key_regex="/tmp/iWe/IWE/iWe-install-key-*.json /tmp/iWe/IWE_INST/iWe-install-key-*.json"

install_key_count=$(ls $install_key_regex 2> /dev/null|wc -l)

MSG="ERROR: Use either IWE or IWE_INST partition. I do not know what to do if I
find a number of keys that is different than 1.

$install_key_count keys found: $(ls $install_key_regex 2> /dev/null)

Installation will not continue.
"
if [[ "$install_key_count" != "1" ]];then
	echo $MSG
	read
	shutdown -r now
fi

cp -a $install_key_regex /tmp/iWe/install_keys/

umount /tmp/iWe/IWE /tmp/iWe/IWE_INST
mount $repodev /run/install/repo

# We use overlayfs for a rw filesystem
mkdir -p /tmp/iWe/iwe-installer/{lower,merged,upper,work}
mount /run/install/repo/images/iwe.img /tmp/iWe/iwe-installer/lower

cd /tmp/iWe/iwe-installer/
mount -t overlay overlay -o lowerdir=lower,upperdir=upper,workdir=work merged

mount /tmp      /tmp/iWe/iwe-installer/merged/tmp                   -o bind
mount proc      /tmp/iWe/iwe-installer/merged/proc  -t proc         -o nosuid,noexec,nodev
mount sysfs     /tmp/iWe/iwe-installer/merged/sys   -t sysfs        -o nosuid,noexec,nodev
mount devtmpfs  /tmp/iWe/iwe-installer/merged/dev   -t devtmpfs     -o mode=0755,nosuid

cp /etc/resolv.conf  /tmp/iWe/iwe-installer/merged/etc/

chroot /tmp/iWe/iwe-installer/merged /opt/iWe/start_activation.sh

umount /tmp/iWe/iwe-installer/lower/{tmp,proc,sys,dev,} # The last , is intentional

umount /tmp/iWe/iwe-installer/merged

if [[ -f /tmp/iWe/activation_error ]];then
	echo
	echo "ACTIVATION ERROR. INSTALLATION WILL NOT CONTINUE."
	read
	shutdown -r now
fi
### end

### Include magic
STORAGE_PREFIXES="sd vd hd"

STORAGE_DEVICES=""
for prefix in $STORAGE_PREFIXES; do
	for sufix in {a..z}; do
		if [[ -b /dev/${prefix}${sufix} ]];then
			STORAGE_DEVICES="${STORAGE_DEVICES} ${prefix}${sufix}"
		fi
	done
done

DIR="/sys/block"

# minimum size of hard drive needed specified in GIGABYTES
MINSIZE=10
ROOTDRIVE=""

# /sys/block/*/size is in 512 byte chunks
for DEV in $STORAGE_DEVICES; do
	REMOVABLE=`cat $DIR/$DEV/removable`
	if (( $REMOVABLE == 0 )); then
		#echo $DEV
		SIZE=`cat $DIR/$DEV/size`
		GB=$(($SIZE/2**21))
		if [ $GB -gt $MINSIZE ]; then
			#echo "$(($SIZE/2**21))"
			if [ -z $ROOTDRIVE ]; then
				ROOTDRIVE=$DEV
			fi
		fi
	fi
done
#echo "ROOTDRIVE=$ROOTDRIVE"

# This is to clear partitioning with a big margin
dd if=/dev/zero of=/dev/$ROOTDRIVE bs=1M count=1

cat << EOF > /tmp/part-include.cfg
zerombr
clearpart --all --drives=$ROOTDRIVE --initlabel
ignoredisk --only-use=$ROOTDRIVE

bootloader --location=mbr --boot-drive=$ROOTDRIVE --driveorder=$ROOTDRIVE

part /boot/efi --fstype="efi" --size=200 --fsoptions="umask=0077,shortname=winnt"
part / --fstype="ext4" --size=5120
part swap --fstype="swap" --size=1024
EOF

# Networking
SRVUUID=$(cat /tmp/iWe/server_uuid)
if [[ -z $SRVUUID ]];then
	SRVUUID='311-for-workgroups'
fi

cat << EOF > /tmp/net-include.cfg
# Network information
network  --bootproto=dhcp --ipv6=auto --activate
network  --hostname=$SRVUUID.beta.iwe.cloud
EOF

# Random root password
ROOT_PW=$(python3 -c 'import crypt,secrets;pw=secrets.token_urlsafe(32);print(crypt.crypt(pw))')

cat << EOF > /tmp/rootpw-include.cfg
# Root password
rootpw --iscrypted $ROOT_PW
EOF

# For the text installer get back to vt 1 where the status is shown
chvt 1
%end

#repo --name=Fedora --mirrorlist=https://mirrors.fedoraproject.org/metalink?repo=fedora-27&arch=x86_64
#repo --name=Updates --mirrorlist=https://mirrors.fedoraproject.org/metalink?repo=updates-released-f27&arch=x86_64
url --mirrorlist=https://mirrors.fedoraproject.org/mirrorlist?path=pub/fedora/linux/releases/27/Server/x86_64/os

# System authorization information
auth --enableshadow --passalgo=sha512
# Use graphical install
#graphical
text

# Run the Setup Agent on first boot
firstboot --enable
# Keyboard layouts
keyboard --vckeymap=us --xlayouts='us'
# System language
lang en_US.UTF-8

# System services
services --enabled="chronyd"
services --enabled=sshd

# System timezone
timezone Europe/Zurich --isUtc

# Reboot when done
reboot

%packages
@^server-product-environment

%end

%addon com_redhat_kdump --disable --reserve-mb='128'

%end

%anaconda
pwpolicy root --minlen=6 --minquality=1 --notstrict --nochanges --emptyok
pwpolicy user --minlen=6 --minquality=1 --notstrict --nochanges --emptyok
pwpolicy luks --minlen=6 --minquality=1 --notstrict --nochanges --emptyok
%end

# Multiple %post sections as the order matters. First isntall packages inside
# the chrtoot, then copy some files to the destination and finally do some more
# work inside the chroot

%post
# Install additional packages
dnf -y install openvpn ansible
%end

%post --nochroot
# ssh key for the root account
mkdir /mnt/sysimage/root/.ssh
chmod 0700 /mnt/sysimage/root/.ssh
cd /mnt/sysimage/root/.ssh
cat /tmp/iWe/client-conf/id_rsa.pub > authorized_keys
chmod 0600 /mnt/sysimage/root/.ssh/authorized_keys
restorecon -R /mnt/sysimage/root/.ssh

# vpn files
cp /tmp/iWe/client-conf/* /mnt/sysimage/etc/openvpn/client/
chmod 600 /mnt/sysimage/etc/openvpn/client/*
restorecon -R /mnt/sysimage/etc/openvpn/client

# /etc/issue
UUID=$(cat /tmp/iWe/server_uuid)

/tmp/iWe/iwe-installer/merged/usr/local/bin/qrc https://beta.iwe.cloud/server/$UUID > /mnt/sysimage/etc/issue
cat << EOF >> /mnt/sysimage/etc/issue

https://beta.iwe.cloud/server/$UUID

iWe OS (Kernel \r on an \m (\l))

EOF
%end

%post
#Enable the VPN service
systemctl enable openvpn-client@iwe-beta
%end
